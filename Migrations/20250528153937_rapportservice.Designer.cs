// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MagasinMVC.Migrations
{
    [DbContext(typeof(MagasinContext))]
    [Migration("20250528153937_rapportservice")]
    partial class rapportservice
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MagasinMVC.Models.LigneVente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("numeric");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer");

                    b.Property<int>("VenteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ProduitId");

                    b.HasIndex("VenteId");

                    b.ToTable("LignesVente");
                });

            modelBuilder.Entity("MagasinMVC.Models.Magasin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Quartier")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Magasins");
                });

            modelBuilder.Entity("MagasinMVC.Models.Produit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Categorie")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("MagasinId")
                        .HasColumnType("integer");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantiteStock")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MagasinId");

                    b.ToTable("Produits");
                });

            modelBuilder.Entity("MagasinMVC.Models.Vente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateVente")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Total")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Ventes");
                });

            modelBuilder.Entity("MagasinMVC.Models.LigneVente", b =>
                {
                    b.HasOne("MagasinMVC.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MagasinMVC.Models.Vente", "Vente")
                        .WithMany("Lignes")
                        .HasForeignKey("VenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");

                    b.Navigation("Vente");
                });

            modelBuilder.Entity("MagasinMVC.Models.Produit", b =>
                {
                    b.HasOne("MagasinMVC.Models.Magasin", null)
                        .WithMany("Produits")
                        .HasForeignKey("MagasinId");
                });

            modelBuilder.Entity("MagasinMVC.Models.Magasin", b =>
                {
                    b.Navigation("Produits");
                });

            modelBuilder.Entity("MagasinMVC.Models.Vente", b =>
                {
                    b.Navigation("Lignes");
                });
#pragma warning restore 612, 618
        }
    }
}
